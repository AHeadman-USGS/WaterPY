Metadata-Version: 1.1
Name: waterpy
Version: 0.1
Summary: A rainfall-runoff model that predicts the amount of water flow in rivers.
Home-page: UNKNOWN
Author: Jeremiah Lant
Author-email: jlant@usgs.gov
License: License
-------

This software is licensed under CC0 1.0 (http://creativecommons.org/publicdomain/zero/1.0/) and is in the public domain 
because it contains materials that originally came from the U.S. Geological Survey (USGS), an agency of the United 
States Department of Interior. For more information, see the official USGS copyright policy 
(http://www2.usgs.gov/visual-id/credit_usgs.html#copyright/).


Disclaimer
----------

This software is preliminary or provisional and is subject to revision. It is being provided to meet the need for timely
best science. The software has not received final approval by the U.S. Geological Survey (USGS). No warranty, expressed 
or implied, is made by the USGS or the U.S. Government as to the functionality of the software and related material nor 
shall the fact of release constitute any such warranty. The software is provided on the condition that neither the USGS 
nor the U.S. Government shall be held liable for any damages resulting from the authorized or unauthorized use of the 
software.

The USGS provides no warranty, expressed or implied, as to the correctness of the furnished software or the suitability 
for any purpose. The software has been tested, but as with any complex software, there could be undetected errors. Users
who find errors are requested to report them to the USGS.

References to non-USGS products, trade names, and (or) services are provided for information purposes only and do not
constitute endorsement or warranty, express or implied, by the USGS, U.S. Department of Interior, or U.S. Government, as
to their suitability, content, usefulness, functioning, completeness, or accuracy.

Although this program has been used by the USGS, no warranty, expressed or implied, is made by the USGS or the United
States Government as to the accuracy and functioning of the program and related program material nor shall the fact of
distribution constitute any such warranty, and no responsibility is assumed by the USGS in connection therewith.

This software is provided "AS IS."
Description: .. image:: https://upload.wikimedia.org/wikipedia/commons/thumb/1/1c/USGS_logo_green.svg/320px-USGS_logo_green.svg.png
                :target: http://www.usgs.gov/
                :alt: U.S. Geological Survey logo
        
        waterpy
        ===============================
        
        *waterpy* is a rainfall-runoff model that predicts the amount of water
        flow in rivers. *waterpy* is a command line application written in Python
        using Click_, and is a complete conversion of the original rainfall-runoff
        model, called Topmodel, from Fortran to Python. The specific version of 
        Topmodel that *waterpy* was initially based on a version by David Wolock, 
        U.S. Geological Survey. Please see report below for more details: 
        
                Wolock, D.M., "Simulating the variable-source-area concept of
                streamflow generation with the watershed model Topmodel", U.S. Geological
                Survey, Water-Resources Investigations Report 93-4124, 1993.
        
        The David Wolock version was recoded and reproduced in the `topmodelpy`_ project.
        
        *waterpy* is a fork of the David Wolock version with many modifications in an 
        attempt to replicate the Topmodel versions by Leon Kaufmann (USGS) and
        Tanja Williamson (USGS). Please see report below for more details:
        
                Williamson, T.N., Lant, J.G., Claggett, P.R., Nystrom, E.A.,
                Milly, P.C.D., Nelson, H.L., Hoffman, S.A., Colarullo, S.J., and Fischer, J.M.,
                2015, Summary of hydrologic modeling for the Delaware River Basin using the
                Water Availability Tool for Environmental Resources (WATER): U.S. Geological
                Survey Scientific Investigations Report 2015â€“5143, 68 p.,
                http://dx.doi.org/10.3133/sir20155143
        
        
        Features
        --------
        
        * Written entirely in Python for ease of use and model extension.
        * Generates a report.hmtl file of model results with interactive plots.
        
        
        Example
        -------
        
        To run waterpy, give waterpy the command `run` along with the path to the 
        model configuration file:
        
        ::
        
            $ waterpy run <path-to-your-modelconfig.ini>
            $ waterpy run data/modelconfig.ini
        
        The model results are saved to the output directory location specified in
        the model configuration file.
        
        A sample model configuration file called `modelconfig.ini` is located in the 
        `data/` directory along with sample input files located in the `inputs/`
        directory and sample output files located in the `outputs/` directory.
        
        
        Documentation
        -------------
        
        An initial website of documentation is located in the `docs` directory.
        
        
        Tests
        -----
        
        A suite of tests were built using `pytest <http://pytest.org/latest/>`_.
        
        To run the test suite, from the command line in the project's root directory::
        
            $ py.test tests/
        
        
        
        Requirements
        ------------
        
        The following are the main requirements/dependencies:
        
        Click==7.0    
        
        Jinja2==2.10.1      
        
        matplotlib==3.0.3     
        
        mpld3==0.3     
        
        numpy==1.16.2     
        
        pandas==0.24.1     
        
        pytest==4.3.0     
        
        scipy==1.2.1     
        
        
        Installation
        ------------
        
        To install waterpy from source:
        
        1. Check that you have Python_ installed::
        
            $ python --version
        
        If you do not have Python_ installed, please download the latest version from `Python's download page`_
        
        2. Download waterpy from the repository and extract to a directory of your choice.
        
           Or, if you have git_ installed you can clone the project::
        
            $ git clone <remote url to waterpy>
        
        3. Navigate to the project's root directory where the setup script called `setup.py` is located::
        
            $ cd waterpy/
        
        | The `setup.py` is a Python file that contains information regarding the installation of a Python module/package, and
        | usually specifies that the module/package has been packaged and distributed with the standard Python distribution
        | package called Distutils_.
        
        4. Run `setup.py` with the `install` command::
        
            $ python setup.py install
        
        waterpy will now be installed to the standard location for third-party Python modules on your
        computer platform.
        
        All the required 3rd party packages in the "Requirements" section should be installed as well,
        however, if the additional packages are not installed you can manually install them using `pip`::
        
            $ pip install click jinja2 matplotlib mpld3 numpy pandas scipy
        
        or from within the parent *waterpy* directory::
        
            $ pip install requirements.txt
        
        For more information regarding installing third-party Python modules, please see `Installing Python Modules`_
        For a description of how installation works including where the module will be installed on your computer platform,
        please see `How Installation Works`_.
        
        
        License
        -------
        
        This software is licensed under `CC0 1.0`_ and is in the `public domain`_ because it contains materials that originally
        came from the `U.S. Geological Survey (USGS)`_, an agency of the `United States Department of Interior`_. For more
        information, see the `official USGS copyright policy`_.
        
        .. image:: http://i.creativecommons.org/p/zero/1.0/88x31.png
                :target: http://creativecommons.org/publicdomain/zero/1.0/
                :alt: Creative Commons logo
        
        
        Disclaimer
        ----------
        
        This software is preliminary or provisional and is subject to revision. It is being provided to meet the need for timely
        best science. The software has not received final approval by the U.S. Geological Survey (USGS). No warranty, expressed
        or implied, is made by the USGS or the U.S. Government as to the functionality of the software and related material nor
        shall the fact of release constitute any such warranty. The software is provided on the condition that neither the USGS
        nor the U.S. Government shall be held liable for any damages resulting from the authorized or unauthorized use of the
        software.
        
        The USGS provides no warranty, expressed or implied, as to the correctness of the furnished software or the suitability
        for any purpose. The software has been tested, but as with any complex software, there could be undetected errors. Users
        who find errors are requested to report them to the USGS.
        
        References to non-USGS products, trade names, and (or) services are provided for information purposes only and do not
        constitute endorsement or warranty, express or implied, by the USGS, U.S. Department of Interior, or U.S. Government, as
        to their suitability, content, usefulness, functioning, completeness, or accuracy.
        
        Although this program has been used by the USGS, no warranty, expressed or implied, is made by the USGS or the United
        States Government as to the accuracy and functioning of the program and related program material nor shall the fact of
        distribution constitute any such warranty, and no responsibility is assumed by the USGS in connection therewith.
        
        This software is provided "AS IS."
        
        
        Author
        ------
        
        Alex Headman <AHeadman@usgs.gov>
        Jeremiah Lant <jlant@usgs.gov>
        
        
        .. _Python: https://www.python.org/
        .. _pytest: http://pytest.org/latest/
        .. _Click: https://click.palletsprojects.com/
        .. _Sphinx: http://sphinx-doc.org/
        .. _public domain: https://en.wikipedia.org/wiki/Public_domain
        .. _CC0 1.0: http://creativecommons.org/publicdomain/zero/1.0/
        .. _U.S. Geological Survey: https://www.usgs.gov/
        .. _USGS: https://www.usgs.gov/
        .. _U.S. Geological Survey (USGS): https://www.usgs.gov/
        .. _United States Department of Interior: https://www.doi.gov/
        .. _official USGS copyright policy: http://www.usgs.gov/visual-id/credit_usgs.html#copyright/
        .. _U.S. Geological Survey (USGS) Software User Rights Notice: http://water.usgs.gov/software/help/notice/
        .. _Python's download page: https://www.python.org/downloads/
        .. _git: https://git-scm.com/
        .. _Distutils: https://docs.python.org/3/library/distutils.html
        .. _Installing Python Modules: https://docs.python.org/3.5/install/
        .. _How Installation Works: https://docs.python.org/3.5/install/#how-installation-works
        .. _topmodelpy: https://github.com/jlant/topmodelpy
        
        
        Changelog
        =========
        
        
        Version 0.1.0
        -------------
        
        2019-08-07
        ----------
        - Added infiltration.py to solve for infiltration excess flow.
        
        2019-05-13
        ----------
        - Add karst option which essentially bypasses the subsurface flow.
        
        
        2019-05-09
        ----------
        - Change from one parameter file to two parameter files, where one 
          file is specific for the entire basin (parameters_basin.csv) and 
          the other file is specific for the land type (parameters_forest.csv,
          parameters_agriculture.csv, parameters_developed.csv).
        
        - Add calculation to adjust the scaling parameter by the spatial coefficient. 
        
        - Add new calculation for soil depth of the root zone using the new parameter
          called rooting_depth_factor 
         
        - Change the calculation for the predicted impervious area flow by using TR55
          SCS curve number method instead of using Equation 37 in Wolock paper from 1993.
          The percentage of precipitation used for the TR55 runoff calculation is:
          impervious_area_fraction * precip_available_recharge
        
        2019-05-06
        ----------
        - Add flow duration curves to output.
        
        2019-05-03
        ----------
        - Add pet calibration coefficient (KPEC) to parameters file
          and update pet_hamon calculation to use the user-specified value.
        
        2019-05-03
        ----------
        - Add SCS runoff curve number calculation to hydrocals.py
        
        2019-04-29
        ----------
        - Add new snow melt routine with the addition of snow water 
          equivalence, and add all snow melt related parameters to output.
        
        - Add channel routing option to model config file.
        
        2019-04-26
        ----------
        - Add new transmissivity calculation using methodology from a 
          pmodel by Leon Kauffman (USGS) called KyTopmodel.
        
        - Add new parameters to parameters file with associated checks
          w parameters added include: wilting_point_fraction,
          tion, saturated_hydraulic_conductivity_multiplier
        
        - Change root_zone_storage - root_zone_storage_max to 
                              root_zone_storage + root_zone_storage_max
          This is the Robert Hudson fix to Kentucky version of Topmodel.  Occurs within
          the conditional of root_zone_storage > root_zone_storage_max
        
        - Change initialization of root_zone_storage by adding a
          multiplication factor of 0.5 which is applied to the root_zone_storage_max.
        
        - Add check on initial flow, if flow_initial < 0.1, set to 0.1.
        
        - Set the soil depth of the roots to equal the soil depth of the
          AB horizon, instead of having the soil depth of the roots set to 1 meter. 
        
        
        Version 0.0.1
        -------------
        
        2019-04-26
        ----------
        - initial Dave Wolock version is implemented in this version. 
        
        
        
Keywords: waterpy
Platform: UNKNOWN
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: CC0 1.0 Universal (CC0 1.0) Public Domain Dedication
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
